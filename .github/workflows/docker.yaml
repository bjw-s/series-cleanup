---
name: Docker Image CI
on:
  push:
    branches: [ development ]

  release:
    types: [published]

jobs:
  build:
    if: "!contains(github.event.head_commit.message, '[ci-skip]')"
    runs-on: ubuntu-latest
    env:
        IMAGE_REPO: ghcr.io
        IMAGE_NAMESPACE: bjw-s/series-cleanup
        IMAGE_NAME: series-cleanup
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Login to Github Container Registry
        run: |
          echo "${{ secrets.CR_PAT }}" | docker login "${IMAGE_REPO}" -u "$GITHUB_ACTOR" --password-stdin

      - name: Get the version
        id: version
        run: |
          TAG_NAME=${{ github.event.release.tag_name }}
          TAG_NAME=${TAG_NAME#"v"}
          echo ::set-output name=tag::${TAG_NAME}

      - name: Build 'latest' container image
        run: |
          echo "latest"
          # docker build \
          #   -t "${IMAGE_REPO}/${IMAGE_NAMESPACE}/${IMAGE_NAME}:latest" \
          #   -f build/package/Dockerfile .

      - name: Build tagged container image
        if: ${{steps.version.outputs.tag}}
        run: |
          echo "${{steps.version.outputs.tag}}"
          # docker build \
          #   -t "${IMAGE_REPO}/${IMAGE_NAMESPACE}/${IMAGE_NAME}:${{steps.version.outputs.tag}}" \
          #   -f build/package/Dockerfile .

      # - name: Push 'latest' container image
      #   run: |
      #     docker push "${IMAGE_REPO}/${IMAGE_NAMESPACE}/${IMAGE_NAME}:latest"

      # - name: Push tagged container image
      #   run: |
      #     docker push "${IMAGE_REPO}/${IMAGE_NAMESPACE}/${IMAGE_NAME}:${{steps.version.outputs.tag}}"
